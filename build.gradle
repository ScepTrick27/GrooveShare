plugins {
    id 'org.springframework.boot' version '3.1.0'
    id 'io.spring.dependency-management' version '1.1.0'
    id "org.sonarqube" version "4.2.1.3168"
    id 'java'
    id "org.flywaydb.flyway" version "9.19.0"
    id 'jacoco'
}

sonar {
    properties {
        property "sonar.projectKey", "GrooveShare"
        property "sonar.projectName", "GrooveShare"
        property "sonar.qualitygate.wait", true
        property "sonar.java.coveragePlugin", "jacoco"
        property "sonar.coverage.jacoco.xmlReportPath", "${buildDir}/reports/jacoco.xml"
    }
    }

flyway {
    url = 'jdbc:h2:file:./target/foobar'
    user = 'sa'
}

group = 'org.example'
version = '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter'
    testImplementation "org.mockito:mockito-core:3.+"
    testImplementation 'junit:junit:4.13.1'
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

jacoco {
    toolVersion = "0.8.9"
    reportsDirectory = layout.buildDirectory.dir('customJacocoReportDir')
}

test {
    useJUnitPlatform()
    finalizedBy jacocoTestReport
}

jacocoTestReport{
    reports {
        xml.required = true
        csv.required = false
        html.outputLocation = layout.buildDirectory.dir('jacocoHtml')
    }
    dependsOn test
}

tasks.named('sonarqube').configure {
    dependsOn jacocoTestReport
}
